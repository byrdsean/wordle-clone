const library=["event"],lines=document.querySelectorAll(".line");let currentLineIndex=0,currentWord,currentWordMetrics;document.querySelectorAll(".key").forEach(e=>{e.addEventListener("click",e=>{keypress(e.target.value)})}),window.addEventListener("keydown",e=>{keypress(e.key)});const getCurrentWord=()=>{var e=Math.floor(Math.random()*library.length);return library[e].toUpperCase()},setWordMetrics=r=>{var t=new Map;if(r)for(let e=0;e<r.length;e++){var n=r.charAt(e),o=t.get(n);o?t.set(n,[...o,e]):t.set(n,[e])}return t},keypress=e=>{var r,t,n;e&&("ENTER"===e.toUpperCase()?validateValue():"BACKSPACE"===e.toUpperCase()?removeLetter():1!==e.length||(e=e.toUpperCase(),r="A".charCodeAt(0),t="Z".charCodeAt(0),(n=e.charCodeAt(0))<r)||t<n||addLetter(e))},getCurrentLineLetters=()=>{var e=lines[currentLineIndex];return Array.from(e.querySelectorAll(".letter"))},removeLetter=()=>{var e=getCurrentLineLetters().reverse().find(e=>0!==e.innerHTML?.length);e&&(e.innerHTML="")},addLetter=e=>{var r=getCurrentLineLetters().find(e=>0===e.innerHTML?.length);r&&(r.innerHTML=e)},validateValue=()=>{var e=getCurrentLineLetters();e.find(e=>0===e.innerHTML?.length)?console.log("Not enough letters!"):e.forEach((e,r)=>{var t=e.innerHTML,n=currentWordMetrics.get(t)||[];0===n.length?(console.log(t+` ${r} Not in current word`),e.classList.add("not-found")):void 0!==n.find(e=>e===r)?(console.log(t+` ${r} Letter is in correct location.`),e.classList.add("correct-location")):(console.log(t+` ${r} Letter is NOT in correct location.`),e.classList.add("incorrect-location"))})},startGame=()=>{currentWord=getCurrentWord(),currentWordMetrics=setWordMetrics(currentWord)};startGame();